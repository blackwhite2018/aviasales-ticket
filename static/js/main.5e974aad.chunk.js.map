{"version":3,"sources":["components/TicketListItem/index.module.scss","components/Header/index.module.scss","components/TransferItem/index.module.scss","components/Sidebar/index.module.scss","components/App/index.module.scss","components/Tab/index.module.scss","components/TicketList/index.module.scss","components/Content/index.module.scss","components/Tabs/index.module.scss","reducers/transferSortReducer.ts","actions/actionTypes.ts","reducers/sortTIcketReducer.ts","reducers/ticketReducer.ts","reducers/searchIdReducer.ts","reducers/loadedReducer.ts","reducers/index.ts","store/index.ts","store/store.ts","actions/actions.ts","components/Header/index.ts","components/Header/Header.tsx","actions/index.ts","components/TransferItem/index.ts","components/TransferItem/TransferItem.tsx","components/Sidebar/Sidebar.tsx","components/Sidebar/index.ts","components/Content/index.ts","components/Content/Content.tsx","components/Tab/index.ts","components/Tab/Tab.tsx","components/Tabs/Tabs.tsx","components/Tabs/index.ts","components/TicketListItem/index.ts","components/TicketListItem/TicketListItem.tsx","components/TicketList/TicketList.tsx","components/TicketList/index.ts","components/App/index.ts","components/App/App.tsx","index.tsx"],"names":["module","exports","initialState","Array","fill","isAllTransferItemChecked","array","every","item","transferSort","state","action","firstItemKey","payload","index","newState","flag","value","map","type","slice","sortTicket","ticketReducer","concat","searchIdReducer","loadedReducer","rootReducer","combineReducers","transferSortReducer","active","sortTicketReducer","tickets","searchId","loadedTickets","store","createStore","reducer","applyMiddleware","thunk","sortTicketAction","transferItemAction","updateSearchId","loaded","updateTickets","getSearchId","dispatch","url","fetch","then","response","json","data","catch","error","console","ticketLoad","fetchData","stop","log","setTimeout","Header","className","styles","header","logo","src","process","logo__img","alt","actions","TransferItem","connect","htmlFor","String","onClick","evt","target","currentTarget","checked","id","TransferList","key","shortid","generate","Sidebar","sidebar","sidebar__title","transfer","Content","children","content","Tab","indexActive","tab","tabs","Tabs","TicketListItem","ticket","price","segments","departure","arrival","origin","destination","stops","length","format","Date","date","Math","floor","duration","join","sort","ticket1","ticket2","TicketList","useState","ticketsList","setTicketList","ticketsCountShow","setTicketsCountShow","useEffect","filter","i","transferTicketsSort","prev","App","actionSearchId","actionTicketLoad","page","wrapper","main","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e974aad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ticket\":\"TicketListItem_ticket__3EtiR\",\"ticket-header\":\"TicketListItem_ticket-header__34qTm\",\"ticket-header__price\":\"TicketListItem_ticket-header__price__Diq6H\",\"ticket-header__logo\":\"TicketListItem_ticket-header__logo__r_aiD\",\"row--title\":\"TicketListItem_row--title__2cCQS\",\"row--data\":\"TicketListItem_row--data__oPKGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__MbTxY\",\"logo\":\"Header_logo__3yB-7\",\"logo__img\":\"Header_logo__img__f2igb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transfer-item\":\"TransferItem_transfer-item__2BWWC\",\"transfer-item__input\":\"TransferItem_transfer-item__input__3JRak\",\"transfer-item__text\":\"TransferItem_transfer-item__text__2hFOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__1LkS7\",\"sidebar__title\":\"Sidebar_sidebar__title__ohKln\",\"transfer\":\"Sidebar_transfer__3KRWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1yGSX\",\"wrapper\":\"App_wrapper__Z-VQ8\",\"main\":\"App_main__9tVZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"Tab_tab__34Zof\",\"tab--active\":\"Tab_tab--active__JewID\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ticket-list\":\"TicketList_ticket-list__1lgRV\",\"show-tickets\":\"TicketList_show-tickets__1-V63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3G3IW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabs\":\"Tabs_tabs__1Odzd\"};","import { ISimpleAction } from '../types';\nimport { TRANSFER_ACTIVE_SORT } from './../actions/actionTypes';\n\nconst initialState: boolean[] = Array(5).fill(false);\n\nconst isAllTransferItemChecked = (array: boolean[]): boolean => array.every(item => item === true);\n\nconst transferSort = (state = initialState, action: ISimpleAction): boolean[] => {\n  const firstItemKey: number = action.payload?.index;\n  let newState = [...state];\n  let flag: boolean = false;\n\n  if ((newState[0] && action.payload.index === 0) || (firstItemKey === 0 && action.payload.value)) {\n    flag = !newState[0];\n    newState = newState.map(item => flag);\n  }\n\n  switch (action.type) {\n    case TRANSFER_ACTIVE_SORT:\n      newState[action.payload.index] = action.payload.value;\n      if (isAllTransferItemChecked(newState.slice(1))) {\n        newState[0] = true;\n      }\n      if (!isAllTransferItemChecked(newState)) {\n        newState[0] = false;\n      }\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default transferSort;\n","export const SELECT_SORT: string = 'SELECT_SORT';\n\nexport const TRANSFER_ACTIVE_SORT: string = 'TRANSFER_ACTIVE_SORT';\n\nexport const UPDATE_TICKETS: string = 'UPDATE_TICKETS';\n\nexport const UPDATE_SEARCH_ID: string = 'UPDATE_SEARCH_ID';\n\nexport const LOADED_TICKETS: string = 'LOADED_TICKETS';\n","import { SELECT_SORT } from './../actions/actionTypes';\n\nconst initialState: number = 0;\n\nconst sortTicket = (state = initialState, action: any) => {\n  switch (action.type) {\n    case SELECT_SORT:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default sortTicket;\n","import { UPDATE_TICKETS } from './../actions/actionTypes';\n\nconst initialState: any = [];\n\nconst ticketReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case UPDATE_TICKETS:\n      return state.concat(action.payload);\n    default:\n      return state;\n  }\n};\n\nexport default ticketReducer;\n","import { UPDATE_SEARCH_ID } from './../actions/actionTypes';\n\nconst initialState: string | null = null;\n\ninterface actionType {\n  type: string;\n  payload: string;\n}\n\nconst searchIdReducer = (state = initialState, { type, payload }: actionType) => {\n  switch (type) {\n    case UPDATE_SEARCH_ID:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default searchIdReducer;\n","import { LOADED_TICKETS } from './../actions/actionTypes';\n\nconst initialState: boolean = false;\n\nconst loadedReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case LOADED_TICKETS:\n      return true;\n    default:\n      return state;\n  }\n};\n\nexport default loadedReducer;\n","import { combineReducers } from 'redux';\n\nimport transferSortReducer from './transferSortReducer';\nimport sortTicketReducer from './sortTIcketReducer';\nimport ticketReducer from './ticketReducer';\nimport searchIdReducer from './searchIdReducer';\nimport loadedReducer from './loadedReducer';\n\nconst rootReducer = combineReducers({\n  transferSort: transferSortReducer,\n  active: sortTicketReducer,\n  tickets: ticketReducer,\n  searchId: searchIdReducer,\n  loadedTickets: loadedReducer,\n});\n\nexport default rootReducer;\n","import store from './store';\n\nexport default store;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\n// const composeEnhancers: Function =\n//  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n  // composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import { ISimpleAction } from '../types';\nimport { SELECT_SORT, TRANSFER_ACTIVE_SORT, UPDATE_TICKETS, UPDATE_SEARCH_ID, LOADED_TICKETS } from './actionTypes';\n\nexport const sortTicketAction = (payload: number) => ({\n  type: SELECT_SORT,\n  payload,\n});\n\nexport const transferItemAction = (payload: ISimpleAction) => ({\n  type: TRANSFER_ACTIVE_SORT,\n  payload,\n});\n\nexport const updateSearchId = (searchId: string) => ({\n  type: UPDATE_SEARCH_ID,\n  payload: searchId,\n});\n\nexport const loadedTickets = (loaded: boolean) => ({\n  type: LOADED_TICKETS,\n  payload: loaded,\n});\n\nexport const updateTickets = (tickets: any) => ({\n  type: UPDATE_TICKETS,\n  payload: tickets,\n});\n\nexport const getSearchId = (dispatch: Function) => {\n  return (url: string) => {\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        if (data.searchId) {\n          dispatch(updateSearchId(data.searchId));\n        }\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n};\n\nconst fetchData = (url: string, dispatch: Function) => {\n  fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      if (data) {\n        dispatch(updateTickets(data.tickets));\n        dispatch(loadedTickets(data.stop));\n        if (!data.stop) {\n          setTimeout(fetchData, 10000, url, dispatch);\n        } else {\n          console.log('ticket loaded');\n        }\n      }\n    })\n    .catch(error => {\n      console.error(error);\n      dispatch(loadedTickets(true));\n    });\n};\n\nexport const ticketLoad = (dispatch: Function) => {\n  return (url: string) => {\n    fetchData(url, dispatch);\n  };\n};\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\n\nimport styles from './index.module.scss';\n\nexport default () => (\n  <header className={styles.header}>\n    <div className={styles.logo}>\n      <img src={`${process.env.PUBLIC_URL}/img/Logo.png`} className={styles.logo__img} alt=\"aviasales\" />\n    </div>\n  </header>\n);\n","import * as actions from './actions';\n\nexport default actions;\n","import TransferItem from './TransferItem';\n\nexport default TransferItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { ITransferItem } from './../../types';\nimport actions from './../../actions';\nimport styles from './index.module.scss';\n\nconst transferItem: React.FC<ITransferItem> = ({ index, value, transferSort, transferItemAction }) => {\n  const handleTransferSort = (evt: React.MouseEvent<HTMLInputElement>) => {\n    const target = evt.currentTarget;\n    transferItemAction({\n      index,\n      value: target.checked,\n    });\n  };\n\n  return (\n    <label htmlFor={`transfer-item-${String(index)}`} className={styles['transfer-item']}>\n      <input\n        type=\"checkbox\"\n        onClick={handleTransferSort}\n        id={`transfer-item-${String(index)}`}\n        className={styles['transfer-item__input']}\n        checked={transferSort[index]}\n      />\n      <span className={styles['transfer-item__text']}>{value}</span>\n    </label>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  transferSort: state.transferSort,\n});\n\nexport default connect(mapStateToProps, actions)(transferItem);\n","import React from 'react';\nimport shortid from 'shortid';\n\nimport TransferItem from '../TransferItem';\nimport styles from './index.module.scss';\n\nconst transferList: string[] = ['Все', 'Без пересадок', '1 пересадка', '2 пересадки', '3 пересадки'];\n\nconst TransferList = transferList.map((value, index) => (\n  <TransferItem key={shortid.generate()} value={value} index={index} />\n));\n\nexport default () => (\n  <aside className={styles.sidebar}>\n    <h3 className={styles.sidebar__title}>количество пересадок</h3>\n    <form action=\"\" className={styles.transfer}>\n      {TransferList}\n    </form>\n  </aside>\n);\n","import Sidebar from './Sidebar';\n\nexport default Sidebar;\n","import Content from './Content';\n\nexport default Content;\n","import React from 'react';\n\nimport { IContent } from '../../types';\nimport styles from './index.module.scss';\n\nexport default ({ children }: IContent) => <section className={styles.content}>{children}</section>;\n","import Tab from './Tab';\n\nexport default Tab;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { ITabProps } from './../../types';\nimport actions from './../../actions';\nimport styles from './index.module.scss';\n\nconst Tab: React.FC<ITabProps> = ({ index, value, indexActive, sortTicketAction }: any) => {\n  const handleClick = () => {\n    sortTicketAction(index);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={`${styles.tab} ${index === indexActive ? styles['tab--active'] : ''}`}\n      onClick={handleClick}\n    >\n      {value}\n    </button>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  indexActive: state.active,\n});\n\nexport default connect(mapStateToProps, actions)(Tab);\n","import React from 'react';\nimport shortid from 'shortid';\n\nimport Tab from '../Tab';\nimport styles from './index.module.scss';\n\nconst tabs: string[] = ['самый дешевый', 'самый быстрый'];\n\nexport default () => (\n  <div className={styles.tabs}>\n    {tabs.map((value: string, index: number) => (\n      <Tab key={shortid.generate()} index={index} value={value} />\n    ))}\n  </div>\n);\n","import Tabs from './Tabs';\n\nexport default Tabs;\n","import TicketListItem from './TicketListItem';\n\nexport default TicketListItem;\n","import React from 'react';\nimport { format } from 'date-fns';\n\nimport styles from './index.module.scss';\n\nexport default ({ ticket: { price, segments } }: any) => {\n  const [departure, arrival] = segments;\n\n  return (\n    <div className={styles.ticket}>\n      <div className={styles['ticket-header']}>\n        <div className={styles['ticket-header__price']}>{price} Р</div>\n        <div className={styles['ticket-header__logo']} />\n      </div>\n      <table>\n        <tbody>\n          <tr className={styles['row--title']}>\n            <td>{`${departure.origin}-${departure.destination}`}</td>\n            <td>в пути</td>\n            <td>{segments[0].stops.length} пересадки</td>\n          </tr>\n          <tr className={styles['row--data']}>\n            <td>{`${format(new Date(departure.date), 'HH:mm')}`}</td>\n            <td>{`${Math.floor(departure.duration / 60)}ч ${Math.floor(departure.duration % 60)}м`}</td>\n            <td>{departure.stops.join(', ')}</td>\n          </tr>\n          <tr className={styles['row--title']}>\n            <td>{`${arrival.origin}-${arrival.destination}`}</td>\n            <td>в пути</td>\n            <td>{segments[1].stops.length} пересадка</td>\n          </tr>\n          <tr className={styles['row--data']}>\n            <td>{`${format(new Date(arrival.date), 'HH:mm')}`}</td>\n            <td>{`${Math.floor(arrival.duration / 60)}ч ${Math.floor(arrival.duration % 60)}м`}</td>\n            <td>{arrival.stops.join(', ')}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\n\nimport { ITicket } from './../../types';\nimport TicketListItem from '../TicketListItem';\n\nimport styles from './index.module.scss';\n\nconst sortTicket = (active: number, tickets: ITicket[]): ITicket[] => {\n  if (active === 0) {\n    return tickets.sort((ticket1: any, ticket2: any) => ticket1.price - ticket2.price);\n  }\n  return tickets.sort(\n    (ticket1: any, ticket2: any) =>\n      ticket1.segments[0].duration -\n      ticket2.segments[0].duration +\n      ticket1.segments[1].duration -\n      ticket2.segments[1].duration\n  );\n};\n\nconst transferTicketsSort = (transferSort: boolean[], tickets: ITicket[]): ITicket[] => {\n  if (transferSort[0]) {\n    return tickets;\n  }\n  if (transferSort[1]) {\n    return tickets.filter(\n      (ticket: any) => ticket.segments[0].stops.length === 0 && ticket.segments[1].stops.length === 0\n    );\n  }\n  if (transferSort[2] || transferSort[3] || transferSort[4]) {\n    return tickets.filter((ticket: any) => {\n      for (let i = 1; i < 4; i++) {\n        if ((ticket.segments[0].stops.length === i || ticket.segments[1].stops.length === i) && transferSort[i]) {\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  return tickets;\n};\n\nconst TicketList: React.FC = ({ tickets, active, transferSort, loadedTickets }: any) => {\n  const [ticketsList, setTicketList] = useState<ITicket[]>(sortTicket(0, tickets));\n  const [ticketsCountShow, setTicketsCountShow] = useState<number>(10);\n\n  useEffect(() => {\n    setTicketList(transferTicketsSort(transferSort, sortTicket(active, [].concat(tickets))));\n  }, [tickets, active, transferSort]);\n\n  const handleAddTickets = () => {\n    setTicketsCountShow(prev => prev + 10);\n  };\n\n  if (tickets.length === 0 && loadedTickets) {\n    return <div>Рейсов, подходящих под заданные фильтры, не найдено</div>;\n  }\n\n  return (\n    <div className={styles['ticket-list']}>\n      {ticketsList.slice(0, ticketsCountShow).map((ticket: any) => (\n        <TicketListItem key={shortid.generate()} ticket={ticket} />\n      ))}\n      {!loadedTickets && <div>loaded tickets</div>}\n      {loadedTickets && (\n        <input type=\"button\" onClick={handleAddTickets} className={styles['show-tickets']} value=\"Show tickets\" />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  tickets: state.tickets,\n  active: state.active,\n  transferSort: state.transferSort,\n  loadedTickets: state.loadedTickets,\n});\n\nexport default connect(mapStateToProps)(TicketList);\n","import TicketList from './TicketList';\n\nexport default TicketList;\n","import App from './App';\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getSearchId, ticketLoad } from './../../actions/actions';\n\nimport Header from '../Header';\nimport Sidebar from '../Sidebar';\nimport Content from '../Content';\nimport Tabs from '../Tabs';\nimport TicketList from '../TicketList';\n\nimport styles from './index.module.scss';\n\nconst App = ({ searchId, actionTicketLoad, actionSearchId }: any) => {\n  useEffect(() => {\n    actionSearchId('https://aviasales-test-api.java-mentor.com/search');\n  }, []);\n\n  useEffect(() => {\n    if (searchId) {\n      actionTicketLoad(`https://aviasales-test-api.java-mentor.com/tickets?searchId=${searchId}`);\n    }\n  }, [searchId]);\n\n  return (\n    <div className={styles.page}>\n      <div className={styles.wrapper}>\n        <Header />\n        <main className={styles.main}>\n          <Sidebar />\n          <Content>\n            <Tabs />\n            <TicketList />\n          </Content>\n        </main>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  searchId: state.searchId,\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    actionSearchId: dispatch(getSearchId),\n    actionTicketLoad: dispatch(ticketLoad),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './components/App';\nimport './vendor/reset/reset.css';\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}